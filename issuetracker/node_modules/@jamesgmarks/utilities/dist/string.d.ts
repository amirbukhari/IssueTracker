/** Pads a string (`subject`) by prepending enough `prefixCharacter`s to create a string with a length `desiredLength` */
export declare const padLeft: (subject: string, desiredLength: number, prefixCharacter?: string) => string;
/** alias for `padLeft` */
export declare const padStart: (subject: string, desiredLength: number, prefixCharacter?: string) => string;
/** Pads a string (`subject`) by appending enough `suffixCharacter`s to the right side to create a string with a length `desiredLength` */
export declare const padRight: (subject: string, desiredLength: number, prefixCharacter?: string) => string;
/** alias for `padRight` */
export declare const padEnd: (subject: string, desiredLength: number, prefixCharacter?: string) => string;
/**
 * Compares two strings for case insensitive equality.
 * @param a first string to compare
 * @param b second string to compare
 */
export declare const iEqual: (a: string, b: string) => boolean;
//# sourceMappingURL=string.d.ts.map