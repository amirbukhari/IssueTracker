import { HashOf } from './types/HashOf';
/**
 * Loop over an Array or over a JS object as if it were an associative array. Inspired by the PHP implementation
 * of `foreach`, returning an array result similar to what you might get from `Array.prototype.map()`
 * @param hash
 * @param fn
 *
 * @returns {Array<U>}
 */
export declare const iterate: <T, U>(hash: HashOf<T> | T[], fn: (key: string, value: T) => U) => U[];
//# sourceMappingURL=iterate.d.ts.map