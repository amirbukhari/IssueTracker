"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const keys_1 = require("./keys");
const reduce_1 = require("../arrays/reduce");
/**
 * Similar to `forEach`, but allows short-circuiting by calling the provided `_break` callback function.
 * Loop over a JS object as if it were an array where the property names are associative keys.
 *
 * @param hash
 * @param fn
 */
exports.iterateWithBreak = (// TODO: Make so it works with arrays too (like `iterate()` above)
hash, fn) => {
    reduce_1.reduce(keys_1.keys(hash), (acc, key) => {
        let done = false || acc.done;
        if (!acc.done) {
            fn(key, hash[key], () => {
                done = true;
            });
        }
        return { done };
    }, { done: false });
};
//# sourceMappingURL=iterateWithBreak.js.map