"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const reduce_1 = require("../arrays/reduce");
const hasKey_1 = require("./hasKey");
const merge_1 = require("./merge");
const keys_1 = require("./keys");
/**
 * Returns a new object derived from `obj` where the keys are changed as described by `remap`, optionally including or omitting remaining data.
 *
 * @param obj Source object to remap keys
 * @param remap A map of key value pairs where the keys match keys from the source object and the values are the new object key names
 * @param returnAll Default `false`. If this is true, all data from the source object will be returned with only the key names in
 *                  `remap` being changed. All other keys and values will remain as they were in the source object.
 */
exports.remapKeys = (obj, remap, returnAll = false) => reduce_1.reduce(keys_1.keys(obj), (acc, k) => merge_1.merge(Object.assign({}, acc), ((hasKey_1.hasKey(remap, k) || returnAll) ? { [(hasKey_1.hasKey(remap, k) ? remap[k] : k)]: obj[k] } : {})), {});
//# sourceMappingURL=remapKeys.js.map