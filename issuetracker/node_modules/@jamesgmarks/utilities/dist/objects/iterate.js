"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mapKeys_1 = require("./mapKeys");
const isDefinedObject_1 = require("./isDefinedObject");
const map_1 = require("../arrays/map");
const isArray_1 = require("../arrays/isArray");
/**
 * Loop over an Array or over a JS object as if it were an associative array. Inspired by the PHP implementation
 * of `foreach`, returning an array result similar to what you might get from `Array.prototype.map()`
 * @param hash
 * @param fn
 *
 * @returns {Array<U>}
 */
exports.iterate = (hash, fn) => {
    if (isArray_1.isArray(hash)) {
        return map_1.map(hash, (value, i) => fn(`${i}`, value));
    }
    return isDefinedObject_1.isDefinedObject(hash) ? mapKeys_1.mapKeys(hash, (key) => fn(key, (hash)[key])) : [];
};
//# sourceMappingURL=iterate.js.map