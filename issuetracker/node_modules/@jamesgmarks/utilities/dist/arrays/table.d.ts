import { Hash } from '../objects/types/Hash';
import { HashOf } from '../objects/types/HashOf';
/**
 * Returns a hash from an array of objects where the key is the value of the provided field name.
 * @param array - The source array
 * @param key - Which field to use as the ObjectHash key
 */
export declare const table: <T extends Hash>(array: T[], key: keyof T) => HashOf<T>;
/** Alias for `table()` */
export declare const hash: <T extends Hash>(array: T[], key: keyof T) => HashOf<T>;
/** Alias for `table()` */
export declare const hashTable: <T extends Hash>(array: T[], key: keyof T) => HashOf<T>;
/** Alias for `table()` */
export declare const associative: <T extends Hash>(array: T[], key: keyof T) => HashOf<T>;
//# sourceMappingURL=table.d.ts.map